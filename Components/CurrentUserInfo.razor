@inject TaxFormService service


<Card Style="max-width: 100%; min-height: 100%; padding:20px;">
    <Grid Container Large="GridSize.Twelve">        
        @if (isUserInfo)
        {
            <CurrentUserInfoForm OnSave="OnSave" CurrentUser="CurrentUser" TaxFormID="TaxFormID" @ref="cuif" />
        }
        else
        {
            <Grid Item Large="GridSize.Twelve" Justify="Justify.FlexEnd">
                <Typography Style="padding-left:20px;" Display="@Display.Block">
                    Basic Information
                    @if(ShowUpdateUserInfoMesage)
                    {
                    <div class="alert alert-info">
                        Do you want to update your profile information with the recent update?
                        <Button OnClick="()=> { UpdateCurrentUserMainInfo(); }">Yes</Button>
                        <Button OnClick="(() => { ShowUpdateUserInfoMesage = !ShowUpdateUserInfoMesage; })">No</Button>
                    </div>
                    }
                </Typography>
                
                <CardContent>
                    <Typography Style="font-size: 14px;" Color="@Color.TextSecondary" GutterBottom>@CurrentUser?.FirstName @CurrentUser?.MiddleName @CurrentUser?.LastName</Typography>
                    <Typography Style="font-size: 14px;" Color="@Color.TextSecondary" GutterBottom>@CurrentUser?.Occupation</Typography>
                    <Typography Style="font-size: 14px;" Color="@Color.TextSecondary" GutterBottom>@CurrentUser?.SSN</Typography>
                    <Typography Style="font-size: 14px;" Color="@Color.TextSecondary" GutterBottom>@CurrentUser?.Email</Typography>
                    <Typography Style="font-size: 14px;" Color="@Color.TextSecondary" GutterBottom>@CurrentUser?.Phone</Typography>
                    <Typography Style="font-size: 14px;" Color="@Color.TextSecondary" GutterBottom>@CurrentUser?.Birthday.ToString("dd/MM/yyyy")</Typography>
                </CardContent>
            </Grid>
        }
        <Grid Item Large="GridSize.Twelve" Justify="Justify.FlexEnd">
            <Button FullWidth OnClick="Save">@displayCUbtnLabel()</Button>
        </Grid>
    </Grid>

</Card>

@code {

    [Parameter]
    public int TaxFormID { get; set; }
    public Person CurrentUser { get; set; }
    private bool isUserInfo { get; set; } = false;
    CurrentUserInfoForm cuif;
    public bool ShowUpdateUserInfoMesage { set; get; } = false;



    protected override Task OnInitializedAsync()
    {
        GetUserInfo();
        return base.OnInitializedAsync();
    }

    private void GetUserInfo()
    {
        CurrentUser = service.GetCurrentUser(TaxFormID);
    }

    public string displayCUbtnLabel()
    {
        if (isUserInfo)
        {

            return "Save";
        }
        else
        {
            return "Edit";
        }

    }
    public void OnSave(Person model)
    {
        CurrentUser = service.SaveTaxFormCurrentUserInfo(model, TaxFormID);

    }
    public void UpdateCurrentUserMainInfo()
    {

        service.UpdateCurrentUser(CurrentUser);
        ShowUpdateUserInfoMesage = !ShowUpdateUserInfoMesage;
    }
    public void Save()
    {
        isUserInfo = !isUserInfo;
        ShowUpdateUserInfoMesage = false;
        if (!isUserInfo)
        {
            cuif.Save();
            ShowUpdateUserInfoMesage = true;

            StateHasChanged();
        }
    }
}
