
    <div style="flex-grow: 1;">
        <Grid Container Spacing="@Spacing.Three">
            @if (!canDisplay)
            {
                <Grid Item Large="@GridSize.Twelve" ExtraSmall="@GridSize.Twelve">
                    <NewTaxYear OnNewTaxYearEvent="OnNewTaxYearEvent" />
                </Grid>
            }
            @if (canDisplay)
            {
                <Grid Item ExtraSmall="@GridSize.Twelve">
                    <Typography>
                        <ApplicationHeader TaxFormID="taxFormId"/>
                    </Typography>
                </Grid>
                <Grid Item ExtraSmall="@GridSize.Twelve">

                    <Grid Container Spacing="@Spacing.Three">
                        <Grid Item ExtraSmall="@GridSize.Six">
                            <CurrentUserInfo />
                        </Grid>
                        <Grid Item ExtraSmall="@GridSize.Six">
                            <CurrentAddress />
                        </Grid>
                    </Grid>

                </Grid>
                <Grid Item ExtraSmall="@GridSize.Twelve">
                    <Toggled TaxformId="taxFormId" />
                </Grid>
                <Grid Item ExtraSmall="@GridSize.Twelve">
                    <DependentForm TaxFormID="taxFormId" OnReloadDependetEvent="OnReloadDependetEvent" />
                </Grid>
                <Grid Item ExtraSmall="@GridSize.Twelve">
                    <DependentList TaxFormID="taxFormId" @ref="dependentList" />
                </Grid>
            }
        </Grid>
    </div>

@code {

    private int taxFormId { set; get; }
    private bool ReloadDependentList { set; get; }
    private bool canDisplay { get; set; } = false;

    DependentList dependentList;

    private void OnNewTaxYearEvent(int tFormId)
    {
        taxFormId = tFormId;
        if (taxFormId > 0)
        {
            canDisplay = true;            
        }

        StateHasChanged();
    }
    private void OnReloadDependetEvent(bool changed)
    {
        ReloadDependentList = changed;

        dependentList.GetDependets();
        StateHasChanged();
    }

    protected override Task OnInitializedAsync()
    {
        if (taxFormId > 0)
        {
            canDisplay = true;
        }
        return base.OnInitializedAsync();
    }
}
